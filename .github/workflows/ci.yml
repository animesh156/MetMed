name: CI - MediConnect

on:
  push:
    branches:
      - main        # Run workflow on direct pushes to main (for deploy)
  pull_request:
    branches:
      - main        # Run CI on PRs targeting main
  workflow_dispatch: # Optional manual trigger

jobs:
  frontend-ci:
    name: Frontend - Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache frontend dependencies
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend tests
        run: |
          cd frontend
          npm test

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  backend-check:
    name: Backend - Check Startup
    runs-on: ubuntu-latest
    needs: frontend-ci   # only runs if frontend CI passes

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Check backend starts
        env:
          FIREBASE_SERVICE_ACCOUNT_BASE64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          cd backend
          node index.js &
          BACKEND_PID=$!
          sleep 5
          echo "Backend started successfully"
          kill $BACKEND_PID

  deploy-backend:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    needs: backend-check
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST "$RENDER_DEPLOY_HOOK_URL"
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
